#
# MIT License
#
# Copyright (c) 2018 IxorTalk CVBA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

AWSTemplateFormatVersion: "2010-09-09"

Description: >
    IxorTalk RDS Service. This stack defines the RDS and all of its related settings.
    In order for this stack to work, it needs to have the following input :

    - Subnets
    - VPC
    - SecurityGroup

Parameters:

    BackupRetention:
        Description: Number of days to retain automatic RDS backups
        Type: Number
        Default: "30"

    DBEngine:
        Description:  Engine of the DB
        Type: String
        Default: postgres
        #See https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html#API_CreateDBInstance_Examples - Engine
        AllowedValues:
            - aurora
            - aurora-postgresql
            - mariadb
            - mysql
            - oracle-ee
            - oracle-se2
            - oracle-se1
            - oracle-se
            - postgres
            - sqlserver-ee
            - sqlserver-se
            - sqlserver-ex
            - sqlserver-web

    DBName:
        Description: The name of the database you want to have created. If not specified, specify projectname instead
        Type: String
        Default: "defaultDB"

    #Optional - Will use the default port of the db engine if not specified
    DBPort:
        Description: The port where the database runs on
        Type: Number
        MinValue: -1
        MaxValue: 65535
        Default: -1

    DBSubnetGroupDescription:
        Default: Subnets for the RDS instances
        Type: String

    InstanceType:
        Description: Instance type to use for RDS database
        Type: String

    MasterPassword:
        Description: Password for admin user
        Type: String

    MasterUsername:
        Description: Username for Postgres admin user
        Type: String
        Default: root

    MultiAZ:
        Description: Configure multi-AZ failover HA - requires 2 or more subnet IDs to be defined
        Type: String
        AllowedValues:
        - "false"
        - "true"
        Default: "false"

    ProjectName:
        Type: String

    Environment:
        Type: String

    SecurityGroupDescription:
        Type: String
        Default: Allow incoming traffic for ECS hosts

    SourceSecurityGroup:
        Description: The SecurityGroup that the RDS SecurityGroup will allow incoming traffic for
        Type: String

    Storage:
        Description: Space in GB to allocate for database storage
        Type: Number
        Default: "5"

    Subnets:
        Description: The Subnets that the RDS is deployed in
        Type: List<String>

    VPC:
        Description: The VPC that the RDS is deployed in
        Type: String

Mappings:
    #These are the default ports per db engine
    DBEngineMapping:
        aurora:
            port: 3306
            connectionString: mysql
        aurora-postgresql:
            port: 3306
            connectionString: postgresql
        mariadb:
            port: 3306
            connectionString: mariadb
        mysql:
            port: 3306
            connectionString: mysql
        oracle-ee:
            port: 1521
            connectionString: oracle
        oracle-se2:
            port: 1521
            connectionString: oracle
        oracle-se1:
            port: 1521
            connectionString: oracle
        oracle-se:
            port: 1521
            connectionString: oracle
        postgres:
            port: 5432
            connectionString: postgresql
        sqlserver-ee:
            port: 1433
            connectionString: sqlserver
        sqlserver-se:
            port: 1433
            connectionString: sqlserver
        sqlserver-ex:
            port: 1433
            connectionString: sqlserver
        sqlserver-web:
            port: 1433
            connectionString: sqlserver

Conditions:
    HasSpecifiedPort:
        !Not [!Equals [-1, !Ref DBPort]]
    HasSpecifiedDBName:
        !Not [!Equals ["defaultDB", !Ref DBName]]
    IsProd: !Or [!Equals ["prod", !Ref Environment], !Equals ["prd", !Ref Environment]]


Resources:

    SubnetGroup:
        Type: AWS::RDS::DBSubnetGroup
        Properties:
            DBSubnetGroupDescription: !Ref DBSubnetGroupDescription
            DBSubnetGroupName: !Sub
                - ${DBSubnetPrefix}-RDS-DBSubnetGroup
                - { DBSubnetPrefix: !If [HasSpecifiedDBName, !Ref DBName, !Ref ProjectName]}
            SubnetIds: !Ref Subnets

    SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: !Ref SecurityGroupDescription
            GroupName: !Sub
              - ${SGPrefix}-RDS-SecurityGroup
              - { SGPrefix: !If [HasSpecifiedDBName, !Ref DBName, !Ref ProjectName]}
            VpcId: !Ref VPC
            SecurityGroupIngress:
              - SourceSecurityGroupId: !Ref SourceSecurityGroup
                IpProtocol: tcp
                FromPort: !If [HasSpecifiedPort, !Ref DBPort, !FindInMap [DBEngineMapping, !Ref DBEngine, port]]
                ToPort: !If [HasSpecifiedPort, !Ref DBPort, !FindInMap [DBEngineMapping, !Ref DBEngine, port]]
              - SourceSecurityGroupId: !ImportValue "vpc:BastionHostSecurityGroup"
                IpProtocol: tcp
                FromPort: !If [HasSpecifiedPort, !Ref DBPort, !FindInMap [DBEngineMapping, !Ref DBEngine, port]]
                ToPort: !If [HasSpecifiedPort, !Ref DBPort, !FindInMap [DBEngineMapping, !Ref DBEngine, port]]

    Database:
        Type: AWS::RDS::DBInstance
        Properties:
            Tags:
                - Key: "ixortalk:ass:rds:include"
                  Value: !If [ IsProd, "no", "yes" ]
            AllocatedStorage: !Ref Storage
            BackupRetentionPeriod: !Ref BackupRetention
            DBName: !Ref DBName
            DBInstanceClass: !Ref InstanceType
            DBSubnetGroupName: !Ref SubnetGroup
            Engine: !Ref DBEngine
            MultiAZ: !Ref MultiAZ
            StorageEncrypted: true
            StorageType: gp2
            VPCSecurityGroups:
                - !Ref SecurityGroup
            MasterUsername: !Ref MasterUsername
            MasterUserPassword: !Ref MasterPassword

Outputs:

    JDBCConnectionString:
        Value : !Sub
            - jdbc:${DBEngineConnectionString}://${Address}:${Port}/${DBName}
            - { DBEngineConnectionString: !FindInMap [DBEngineMapping, !Ref DBEngine, connectionString],
                Address: !GetAtt Database.Endpoint.Address,
                Port: !GetAtt Database.Endpoint.Port,
                DBName: !Ref DBName }

    DBName:
        Value: !Ref DBName

    # TODO this export can be removed when no longer in use
    Host:
        Value: !GetAtt Database.Endpoint.Address
        Export:
            Name: !Sub rds:${DBName}-RDSHost

    RDSHost:
        Value: !GetAtt Database.Endpoint.Address
        Export:
            Name: rds:RDSHost
