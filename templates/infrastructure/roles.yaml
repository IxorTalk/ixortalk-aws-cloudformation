#
# MIT License
#
# Copyright (c) 2018 IxorTalk CVBA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

AWSTemplateFormatVersion: "2010-09-09"

Parameters:

  ProjectName:
    Type: String
    Default: demo

  Environment:
    Type: String
    Default: tst

Resources:

  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSServiceRole
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ECSServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:Describe
                  - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
                  - elasticloadbalancing:Describe*
                  - elasticloadbalancing:RegisterInstancesWithLoadBalancer
                  - elasticloadbalancing:DeregisterTargets
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeTargetHealth
                  - elasticloadbalancing:RegisterTargets
                Resource: "*"

  S3FullAccessServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: S3FullAccessServiceRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3FullAccessServiceRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub "arn:aws:s3:::${ProjectName}-${Environment}-*"
                  - !Sub "arn:aws:s3:::${ProjectName}-${Environment}-*/*"
              - Effect: Allow
                Action:
                  - "s3:ListAllMyBuckets"
                  - "s3:ListBucket"
                  - "s3:HeadBucket"
                Resource:
                  - "*"

  ECSHostRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: ECSHostRole
      AssumeRolePolicyDocument:
        Statement:
          Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
      Policies:
        - PolicyName: ecs-service
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - ecs:CreateCluster
                  - ecs:DeregisterContainerInstance
                  - ecs:DiscoverPollEndpoint
                  - ecs:Poll
                  - ecs:RegisterContainerInstance
                  - ecs:StartTelemetrySession
                  - ecs:Submit*
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:GetAuthorizationToken
                Resource: "*"
        - PolicyName: s3-read
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:GetObject"
                Resource:
                  - !Sub "arn:aws:s3:::ixortalk-${ProjectName}-ecs-${Environment}"
                  - !Sub "arn:aws:s3:::ixortalk-${ProjectName}-ecs-${Environment}/*"
        - PolicyName: route53-write
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - route53:GetHostedZone
                  - route53:ListResourceRecordSets
                  - route53:ChangeResourceRecordSets
                Resource: "arn:aws:route53:::hostedzone/*"
              - Effect: Allow
                Action:
                  - route53:GetChange
                Resource: "arn:aws:route53:::change/*"
              - Effect: Allow
                Action:
                  - route53:ListHostedZones
                Resource: "*"
        - PolicyName: iot-access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - iot:*
                Resource:
                  - "*"


Outputs:

  ECSServiceRole:
    Value: !Ref ECSServiceRole
    Export:
      Name: "ecs-infra:ECSServiceRole"

  S3FullAccessServiceRole:
    Value: !Ref S3FullAccessServiceRole
    Export:
      Name: "ecs-infra:S3FullAccessServiceRole"

  S3FullAccessServiceRoleArn:
    Value: !GetAtt S3FullAccessServiceRole.Arn
    Export:
      Name: "ecs-infra:S3FullAccessServiceRoleArn"

  ECSHostRole:
    Value: !Ref ECSHostRole
