#
# MIT License
#
# Copyright (c) 2018 IxorTalk CVBA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

Description: >
    This IxorTalk template deploys an Application Load Balancer that exposes our various ECS services.
    We create them it a separate nested template, so it can be referenced by all of the other nested templates.

Parameters:
    CertificateARN:
        Description: The certificate to assign with the listener
        Default: ""
        Type: String

    HTTPListenerExportName:
        Default: ""
        Type: String

    HTTPSListenerExportName:
        Default: ""
        Type: String

    LoadBalancerName:
        Type: String

    LoadBalancerDNSExportName:
        Type: String

    SecurityGroup:
        Description: Select the Security Group to apply to the Application Load Balancer
        Type: AWS::EC2::SecurityGroup::Id

    Scheme:
        Description: Scheme of the loadbalancer, determines whether this is an external or internal loadbalancer
        Type: String
        AllowedValues:
          - internal
          - internet-facing

    Subnets:
        Description: Choose which subnets the Application Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    VPC:
        Description: Choose which VPC the Application Load Balancer should be deployed to
        Type: AWS::EC2::VPC::Id

    AccessLogsS3BucketName:
        Description: The name for the S3 bucket to store the access logs for this loadbalancer
        Type: String

Mappings:
    Region2ELBAccountId:
        us-east-1:
          AccountId: "127311923021"
        us-west-1:
          AccountId: "027434742980"
        us-west-2:
          AccountId: "797873946194"
        eu-west-1:
          AccountId: "156460612806"
        eu-west-2:
          AccountId: "652711504416"
        eu-west-3:
          AccountId: "009996457667"
        ap-northeast-1:
          AccountId: "582318560864"
        ap-northeast-2:
          AccountId: "600734575887"
        ap-northeast-3:
          AccountId: "383597477331"
        ap-southeast-1:
          AccountId: "114774131450"
        ap-southeast-2:
          AccountId: "783225319266"
        ap-south-1:
          AccountId: "718504428378"
        us-east-2:
          AccountId: "033677994240"
        sa-east-1:
          AccountId: "507241528517"
        cn-north-1:
          AccountId: "638102146993"
        eu-central-1:
          AccountId: "054676820928"

Conditions:
    HTTPS:
        !Not [!Equals ["", !Ref HTTPSListenerExportName]]

    HTTP:
        !Not [!Equals ["", !Ref HTTPListenerExportName]]

    InternetFacingHTTPS:
        !And
          - !Equals [internet-facing, !Ref Scheme]
          - !Condition HTTPS

Resources:

    AccessLogS3Bucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Ref AccessLogsS3BucketName
            LifecycleConfiguration:
                Rules:
                - ExpirationInDays: 1
                  Status: Enabled

    AccessLogS3BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket: !Ref AccessLogsS3BucketName
            PolicyDocument:
                Version: '2012-10-17'
                Statement:
                -   Sid: S3AccessForLoadbalancer
                    Effect: Allow
                    Action: "s3:PutObject"
                    Resource: !Sub arn:aws:s3:::${AccessLogsS3BucketName}/AWSLogs/${AWS::AccountId}/*
                    Principal:
                      AWS: !FindInMap [Region2ELBAccountId, !Ref 'AWS::Region', AccountId]

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        DependsOn: AccessLogS3Bucket
        Properties:
            Name: !Ref LoadBalancerName
            Scheme: !Ref Scheme
            Subnets: !Ref Subnets
            SecurityGroups:
                - !Ref SecurityGroup
            LoadBalancerAttributes:
                - Key: access_logs.s3.enabled
                  Value: true
                - Key: access_logs.s3.bucket
                  Value: !Ref AccessLogsS3BucketName

    HTTPLoadBalancerListener:
        Condition: HTTP
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 80
            Protocol: HTTP
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref DefaultTargetGroup

    HTTPSLoadBalancerListener:
        Condition: HTTPS
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            Certificates:
                - CertificateArn: !Ref CertificateARN
            LoadBalancerArn: !Ref LoadBalancer
            Port: 443
            Protocol: HTTPS
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref DefaultTargetGroup

    #Requests to actuator endpoints from the external LB should be blocked (redirected to default TG which is not used)
    ActuatorListenerRule:
        Condition: InternetFacingHTTPS
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref HTTPSLoadBalancerListener
            Priority: 99
            Conditions:
                - Field: path-pattern
                  Values:
                    - "*/actuator/*"
            Actions:
                - TargetGroupArn: !Ref DefaultTargetGroup
                  Type: forward


    # We define a default target group here, as this is a mandatory Parameters
    # when creating an Application Load Balancer Listener. This is not used, instead
    # a target group is created per-service in each service template (../services/*)
    DefaultTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Sub ${LoadBalancerName}-DefaultTG
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP

Outputs:

    LoadbalancerDNS:
        Value: !GetAtt LoadBalancer.DNSName
        Export:
            Name: !Ref LoadBalancerDNSExportName

    LoadBalancerCanonicalHostedZoneID:
           Value: !GetAtt LoadBalancer.CanonicalHostedZoneID

    HTTPSLoadBalancerListener:
        Condition: HTTPS
        Value: !Ref HTTPSLoadBalancerListener
        Export:
            Name: !Ref HTTPSListenerExportName

    HTTPLoadBalancerListener:
        Condition: HTTP
        Value: !Ref HTTPLoadBalancerListener
        Export:
            Name: !Ref HTTPListenerExportName
