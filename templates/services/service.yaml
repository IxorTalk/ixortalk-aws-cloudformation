#
# MIT License
#
# Copyright (c) 2018 IxorTalk CVBA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

AWSTemplateFormatVersion: "2010-09-09"

Description: >
    IxorTalk ECS Service

Parameters:

    Cluster:
        Description: Please provide the ECS Cluster ID that this service should run on
        Type: String

    ContainerName:
        Description: The name of the container that the ECS Service should create tasks for
        Type: String

    ContainerPort:
        Description: The port which should be exposed by the container
        Type: Number

    DesiredCount:
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 1
        MinValue: 0

    HealthCheckPath:
        Description: The path the load balancer should use for performing the health checks
        Type: String

    HealthCheckGracePeriodSeconds:
        Description: The period of time, in seconds, that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks after a task has first started.
        Type: Number
        Default: 0

    Listener:
        Description: The Application Load Balancer listener to register with
        Type: String

    ListenerPath:
        Description: The path to register with the Application Load Balancer
        Type: String

    ListenerRulePriority:
        Type: Number

    TaskDefinition:
        Description: The task definition that you want to run on the cluster
        Type: String

    TargetGroupName:
        Type: String

    ServiceName:
        Type: String

    ServiceDeploymentMaximumPercent:
        Type: Number
        Default: 200

    ServiceDeploymentMinimumHealthyPercent:
        Type: Number
        Default: 100

    VPC:
        Description: The VPC that the ECS cluster is deployed to
        Type: AWS::EC2::VPC::Id

Resources:

    Service:
        Type: AWS::ECS::Service
        DependsOn: ListenerRule
        Properties:
            Cluster: !Ref Cluster
            ServiceName: !Ref ServiceName
            Role: !ImportValue "ecs-infra:ECSServiceRole"
            DesiredCount: !Ref DesiredCount
            HealthCheckGracePeriodSeconds: !Ref HealthCheckGracePeriodSeconds
            DeploymentConfiguration:
                MaximumPercent: 200
                MinimumHealthyPercent: 50
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers:
                - ContainerName: !Ref ContainerName
                  ContainerPort: !Ref ContainerPort
                  TargetGroupArn: !Ref TargetGroup

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP
            Matcher:
                HttpCode: 200-299
            Name: !Ref TargetGroupName
            HealthCheckIntervalSeconds: 15
            HealthCheckPath: !Ref HealthCheckPath
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 10
            HealthyThresholdCount: 2
            UnhealthyThresholdCount: 10
            TargetGroupAttributes:
                - Key: deregistration_delay.timeout_seconds
                  Value: '30'

    ListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref Listener
            Priority: !Ref ListenerRulePriority
            Conditions:
                - Field: path-pattern
                  Values:
                    - !Ref ListenerPath
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward
