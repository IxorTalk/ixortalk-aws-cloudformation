#
# MIT License
#
# Copyright (c) 2018 IxorTalk CVBA
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

AWSTemplateFormatVersion: "2010-09-09"

Description: >

    This template deploys the IxorTalk ECS services from containers published on
    Dockerhub.

Parameters:

    SpringCloudConfigLabel:
        Description: The branch of the config environment to use
        Type: String
        Default: master

    SpringProfilesActive:
        Type: String
        Default: tst

    Environment:
        Description: The target environment (tst/stg/prd)
        Type: String
        Default: tst

    ProjectName:
        Type: String
        Default: demo

    S3TemplatesBucketName:
        Type: String
        Default: "ixortalktooling-prd-aws-cloudformation"

    RDSMasterPassword:
        Description: Password for admin user
        Type: String
        Default: SuperSecurePassword

    HostedZoneNameWithoutDot:
        Type: String
        Default: yourdomain.com

    SpringCloudConfigServerURI:
        Description: The URI for the config server of the application (eg. https://github.com/IxorTalk/ixortalk.config.demo.git)
        Type: String

    SubdomainExternal:
        Type: String
        Default: www

    AlertManagerImageVersion:
        Type: String
        Default: latest

    AssetMgmtImageVersion:
        Type: String
        Default: latest

    AssetStateImageVersion:
        Type: String
        Default: latest

    AssetMgmtUiImageVersion:
        Type: String
        Default: latest

    ConfigServerImageVersion:
        Type: String
        Default: latest

    GatewayImageVersion:
        Type: String
        Default: latest

    ImageServiceImageVersion:
        Type: String
        Default: latest

    NginxImageVersion:
        Type: String
        Default: latest

    GrafanaImageVersion:
        Type: String
        Default: latest

    MailingServiceImageVersion:
        Type: String
        Default: latest

    OrganizationApiImageVersion:
        Type: String
        Default: latest

    UserRegistrationApiImageVersion:
        Type: String
        Default: latest

    UserRegistrationUiImageVersion:
        Type: String
        Default: latest

    PrometheusImageVersion:
        Type: String
        Default: latest

    BlackboxExporterImageVersion:
        Type: String
        Default: latest

    CAdvisorImageVersion:
        Type: String
        Default: latest

    NodeExporterImageVersion:
        Type: String
        Default: latest

    PrometheusSupportNginxAuthEnabled:
        Type: String
        Default: 'false'

    IncludeProfilePictureBucketWithUserRegistrationService:
        Type: String
        Default: false
        AllowedValues:
            - true
            - false

    NumberOfEC2InstancesInTheECSCluster:
        Default: 1
        Type: Number
        MinValue: 0

    PrometheusContainerMemory:
        Default: 384
        Type: Number

    ExcludeAlertManagerService:
        Type: String
        Default: false

    ExcludeAssetMgmtService:
        Type: String
        Default: false

    ExcludeAssetStateService:
        Type: String
        Default: false

    ExcludeAssetMgmtUIService:
        Type: String
        Default: false
        
    ExcludeConfigService:
        Type: String
        Default: false

    ExcludeGatewayService:
        Type: String
        Default: false

    ExcludeGrafanaService:
        Type: String
        Default: false

    ExcludeImageService:
        Type: String
        Default: false

    ExcludeMailingService:
        Type: String
        Default: false

    ExcludeOrganizationApiService:
        Type: String
        Default: false

    ExcludeUserRegistrationApiService:
        Type: String
        Default: false

    ExcludeUserRegistrationUiService:
        Type: String
        Default: false

    ExcludeNginxExternalService:
        Type: String
        Default: false

    ExcludePrometheusService:
        Type: String
        Default: false

    ExcludePrometheusSupportService:
        Type: String
        Default: false

Conditions:
    AlertManagerServiceCondition: !Not [ !Equals ["true", !Ref ExcludeAlertManagerService]]
    AssetMgmtServiceCondition: !Not [ !Equals ["true", !Ref ExcludeAssetMgmtService]]
    AssetStateServiceCondition: !Not [ !Equals ["true", !Ref ExcludeAssetStateService]]
    AssetMgmtUIServiceCondition: !Not [ !Equals ["true", !Ref ExcludeAssetMgmtUIService]]
    ConfigServiceCondition: !Not [ !Equals ["true", !Ref ExcludeConfigService]]
    GatewayServiceCondition: !Not [ !Equals ["true", !Ref ExcludeGatewayService]]
    GrafanaServiceCondition: !Not [ !Equals ["true", !Ref ExcludeGrafanaService]]
    ImageServiceCondition: !Not [ !Equals ["true", !Ref ExcludeImageService]]
    MailingServiceCondition: !Not [ !Equals ["true", !Ref ExcludeMailingService]]
    OrganizationApiServiceCondition: !Not [ !Equals ["true", !Ref ExcludeOrganizationApiService]]
    UserRegistrationApiServiceCondition: !Not [ !Equals ["true", !Ref ExcludeUserRegistrationApiService]]
    UserRegistrationUiServiceCondition: !Not [ !Equals ["true", !Ref ExcludeUserRegistrationUiService]]
    NginxExternalServiceCondition: !Not [ !Equals ["true", !Ref ExcludeNginxExternalService]]
    PrometheusServiceCondition: !Not [ !Equals ["true", !Ref ExcludePrometheusService]]
    PrometheusSupportServiceCondition: !Not [ !Equals ["true", !Ref ExcludePrometheusSupportService]]

Resources:

    AlertManagerService:
        Type: AWS::CloudFormation::Stack
        Condition: AlertManagerServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue ecs-infra:ECS-Cluster
                ContainerName: ixortalk-alertmanager
                ContainerPort: 9093
                HealthCheckPath: /alertmanager/
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /alertmanager/*
                ListenerRulePriority: 1
                TaskDefinition: !GetAtt AlertmanagerTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: AlertmanagerTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: AlertManagerService
                ServiceDeploymentMaximumPercent: 100
                ServiceDeploymentMinimumHealthyPercent: 0
                DesiredCount: 1

    AssetMgmtService:
        Type: AWS::CloudFormation::Stack
        Condition: AssetMgmtServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-assetmgmt
                ContainerPort: 8001
                HealthCheckPath: /assetmgmt/actuator/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /assetmgmt/*
                ListenerRulePriority: 2
                TaskDefinition: !GetAtt AssetmgmtTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: AssetmgmtTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: AssetMgmtService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    AssetStateService:
        Type: AWS::CloudFormation::Stack
        Condition: AssetStateServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-assetstate
                ContainerPort: 8002
                HealthCheckPath: /assetstate/actuator/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /assetstate/*
                ListenerRulePriority: 3
                TaskDefinition: !GetAtt AssetStateTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: AssetStateTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: AssetStateService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    AssetMgmtUIService:
        Type: AWS::CloudFormation::Stack
        Condition: AssetMgmtUIServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-assetmgmt-ui
                ContainerPort: 7001
                HealthCheckPath: /assetmgmt-ui/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /assetmgmt-ui/*
                ListenerRulePriority: 70
                TaskDefinition: !GetAtt AssetmgmtUITaskDefinition.Outputs.TaskDefinition
                TargetGroupName: AssetmgmtUITG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: AssetMgmtUIService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    ConfigService:
        Type: AWS::CloudFormation::Stack
        Condition: ConfigServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-configserver
                ContainerPort: 8899
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster
                HealthCheckPath: /config/actuator/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /config/*
                ListenerRulePriority: 7
                TaskDefinition: !GetAtt ConfigserverTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: ConfigTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: ConfigService

    GatewayService:
        Type: AWS::CloudFormation::Stack
        Condition: GatewayServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-gateway
                ContainerPort: 8888
                Listener: !ImportValue ecs-infra:ExternalLB-HTTPS-Listener
                ListenerPath: /*
                ListenerRulePriority: 100
                HealthCheckPath: /actuator/health
                TaskDefinition: !GetAtt GatewayTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: GatewayTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: GatewayService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster
                TargetGroupStickinessEnabled: true

    GrafanaService:
        Type: AWS::CloudFormation::Stack
        Condition: GrafanaServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-nginx-grafana
                ContainerPort: 3001
                HealthCheckPath: /grafana/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /grafana/*
                ListenerRulePriority: 8
                TaskDefinition: !GetAtt GrafanaTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: GrafanaTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: GrafanaService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    ImageService:
        Type: AWS::CloudFormation::Stack
        Condition: ImageServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-image-service
                ContainerPort: 8006
                HealthCheckPath: /image/actuator/health
                HealthCheckGracePeriodSeconds: 60
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /image/*
                ListenerRulePriority: 12
                TaskDefinition: !GetAtt ImageServiceTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: ImageServiceTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: ImageService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    MailingService:
        Type: AWS::CloudFormation::Stack
        Condition: MailingServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-mailing-service
                ContainerPort: 8003
                HealthCheckPath: /mailing/actuator/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /mailing/*
                ListenerRulePriority: 4
                TaskDefinition: !GetAtt MailingServiceTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: MailingServiceTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: MailingService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    OrganizationApiService:
        Type: AWS::CloudFormation::Stack
        Condition: OrganizationApiServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-organization-api
                ContainerPort: 8008
                HealthCheckPath: /organization/actuator/health
                Listener: !ImportValue "ecs-infra:InternalLB-HTTPS-Listener"
                ListenerPath: /organization/*
                ListenerRulePriority: 5
                TaskDefinition: !GetAtt OrganizationApiTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: OrganizationApiTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: OrganizationApiService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    UserRegistrationApiService:
        Type: AWS::CloudFormation::Stack
        Condition: UserRegistrationApiServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-user-registration-api
                ContainerPort: 8005
                HealthCheckPath: /user-registration/actuator/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /user-registration/*
                ListenerRulePriority: 10
                TaskDefinition: !GetAtt UserRegistrationApiServiceTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: UserRegistrationApiTargetGroup
                VPC: !ImportValue "vpc:VPC"
                ServiceName: UserRegistrationApiService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    UserRegistrationUiService:
        Type: AWS::CloudFormation::Stack
        Condition: UserRegistrationUiServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-user-registration-ui
                ContainerPort: 7005
                HealthCheckPath: /user-registration-ui/actuator/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /user-registration-ui/*
                ListenerRulePriority: 11
                TaskDefinition: !GetAtt UserRegistrationUiServiceTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: UserRegistrationUiTargetGroup
                VPC: !ImportValue "vpc:VPC"
                ServiceName: UserRegistrationUiService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    NginxExternalService:
        Type: AWS::CloudFormation::Stack
        Condition: NginxExternalServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-nginx-external
                ContainerPort: 80
                HealthCheckPath: /health
                Listener: !ImportValue ecs-infra:ExternalLB-HTTP-Listener
                ListenerPath: /*
                ListenerRulePriority: 100
                TaskDefinition: !GetAtt NginxExternalTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: NginxExternalTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: NginxExternalService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    PrometheusService:
        Type: AWS::CloudFormation::Stack
        Condition: PrometheusServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-prometheus
                ContainerPort: 9090
                HealthCheckPath: /prometheus/graph
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /prometheus/*
                ListenerRulePriority: 9
                TaskDefinition: !GetAtt PrometheusTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: PrometheusTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: PrometheusService
                ServiceDeploymentMaximumPercent: 100
                ServiceDeploymentMinimumHealthyPercent: 0
                DesiredCount: 1

    PrometheusSupportService:
        Type: AWS::CloudFormation::Stack
        Condition: PrometheusSupportServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/service.yaml
            Parameters:
                Cluster: !ImportValue "ecs-infra:ECS-Cluster"
                ContainerName: ixortalk-prometheus-support-nginx
                ContainerPort: 8004
                HealthCheckPath: /prometheus-support/health
                Listener: !ImportValue ecs-infra:InternalLB-HTTPS-Listener
                ListenerPath: /prometheus-support/*
                ListenerRulePriority: 98
                TaskDefinition: !GetAtt PrometheusSupportTaskDefinition.Outputs.TaskDefinition
                TargetGroupName: PrometheusSupportTG
                VPC: !ImportValue "vpc:VPC"
                ServiceName: PrometheusSupportService
                DesiredCount: !Ref NumberOfEC2InstancesInTheECSCluster

    AlertmanagerTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: AlertManagerServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/alertmanager.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                AlertManagerImageVersion: !Ref AlertManagerImageVersion

    AssetmgmtTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: AssetMgmtServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/assetmgmt.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                AssetMgmtImageVersion: !Ref AssetMgmtImageVersion

    AssetStateTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: AssetStateServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/assetstate.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                AssetStateImageVersion: !Ref AssetStateImageVersion

    AssetmgmtUITaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: AssetMgmtUIServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/assetmgmt-ui.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                AssetMgmtUiImageVersion: !Ref AssetMgmtUiImageVersion

    ConfigserverTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: ConfigServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/configserver.taskdefinition.yaml
            Parameters:
                ProjectName: !Ref ProjectName
                Environment: !Ref Environment
                S3TemplatesBucketName: !Ref S3TemplatesBucketName
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringCloudConfigServerURI: !Ref SpringCloudConfigServerURI
                SpringProfilesActive: !Ref SpringProfilesActive
                ConfigServerImageVersion: !Ref ConfigServerImageVersion
                GitUriPrefix: !Select [ 0, !Split [ ':', !Ref SpringCloudConfigServerURI ] ]

    GatewayTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: GatewayServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/gateway.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                GatewayImageVersion: !Ref GatewayImageVersion

    GrafanaTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: GrafanaServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/grafana.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                NginxImageVersion: !Ref NginxImageVersion
                GrafanaImageVersion: !Ref GrafanaImageVersion

    ImageServiceTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: ImageServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/image-service.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                ProjectName: !Ref ProjectName
                Environment: !Ref Environment
                ImageServiceImageVersion: !Ref ImageServiceImageVersion

    MailingServiceTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: MailingServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/mailing.service.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                MailingServiceImageVersion: !Ref MailingServiceImageVersion

    OrganizationApiTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: OrganizationApiServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/organization-api.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                JDBCConnectionString: !ImportValue "rds:OrganizationApiDB-JDBCConnectionString"
                JDBCUsername: !ImportValue "rds:OrganizationApiDB-JDBCUsername"
                JDBCPassword: !ImportValue "rds:OrganizationApiDB-JDBCPassword"
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                OrganizationApiImageVersion: !Ref OrganizationApiImageVersion

    UserRegistrationApiServiceTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: UserRegistrationApiServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/user-registration-api.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                ProjectName: !Ref ProjectName
                Environment: !Ref Environment
                UserRegistrationApiImageVersion: !Ref UserRegistrationApiImageVersion
                IncludeProfilePictureBucket: !Ref IncludeProfilePictureBucketWithUserRegistrationService

    UserRegistrationUiServiceTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: UserRegistrationUiServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/user-registration-ui.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                UserRegistrationUiImageVersion: !Ref UserRegistrationUiImageVersion

    NginxExternalTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: NginxExternalServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/nginx-external.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                NginxImageVersion: !Ref NginxImageVersion

    PrometheusTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: PrometheusServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/prometheus.taskdefinition.yaml
            Parameters:
                ExternalLoadbalancerDNS: !Join [".", [!Ref SubdomainExternal, !Ref HostedZoneNameWithoutDot]]
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                PrometheusImageVersion: !Ref PrometheusImageVersion
                ContainerMemory: !Ref PrometheusContainerMemory

    PrometheusSupportTaskDefinition:
        Type: AWS::CloudFormation::Stack
        Condition: PrometheusSupportServiceCondition
        Properties:
            TemplateURL: !Sub https://s3.eu-central-1.amazonaws.com/${S3TemplatesBucketName}/services/core/prometheus-support.taskdefinition.yaml
            Parameters:
                LoadbalancerDNS: !Join [".", ["loadbalancer", "internal", !Ref HostedZoneNameWithoutDot]]
                SpringCloudConfigLabel: !Ref SpringCloudConfigLabel
                SpringProfilesActive: !Ref SpringProfilesActive
                NginxImageVersion: !Ref NginxImageVersion
                BlackboxExporterImageVersion: !Ref BlackboxExporterImageVersion
                CAdvisorImageVersion: !Ref CAdvisorImageVersion
                NodeExporterImageVersion: !Ref NodeExporterImageVersion
                PrometheusSupportNginxAuthEnabled: !Ref PrometheusSupportNginxAuthEnabled
